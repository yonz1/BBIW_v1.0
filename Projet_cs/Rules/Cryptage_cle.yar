import "pe"
import "hash"
import "math"


rule Math_obfuscation{
	meta:
		Action = "Fonctions mathématiques cachant la réel intention du programme"
	strings:
		$Opaque_conjecture  = {69 66 28 37 2A ?? 2A ?? 20 2D 31 20 21 3D 20 ?? 2A ?? 29 0A} // toujours vrai
		$Collatz_conjecture = {77 68 69 6C 65 28 ?? 3E 31 29 0A}
		$Collatz_conjecture1 = {69 66 28 ?? 25 32 3D 3D 31 29 0A} 
		$Collatz_conjecture2 = {?? 3D ?? 2A 33 2B 31 3B 0A}
		$Collatz_conjecture3 = {65 6C 73 65 20 ?? 3D ?? 2F 32 3B 0A}
		$Collatz_conjecture4 = {69 66 28 ?? 3D 3D 31 29 0A} // toujours atteignable
		$Opaque_predicat1 = {69 66 28 28 2A ?? 29 25 32 20 3D 3D 20 30 29 7B 20 ?? 20 3D 20 ?? 20 2B 20 ?? 3B 20 7D 0A}
		$Opaque_predicat2 = {65 6C 73 65 7B 20 ?? 20 3D 20 ?? 2B 31 3B 20 ?? 20 3D 20 ?? 20 2B 20 32 3B 20 7D}
		$Opaque_predicat3 = {69 66 20 28 28 2A ?? 29 25 32 20 3D 3D 20 30 29 7B 20 ?? 20 3D 20 ?? 2B 33 3B 20 ?? 20 3D 20 ?? 20 2B 20 33 3B}

	condition:
		all of ($Opaque_conjecture*) or all of ($Collatz_conjecture*) or all of ($Opaque_predicat*)
}

rule control_obscurcissement  {
	meta:
		Action = "Fonctions cachant la réel intention du programme"
	strings:
		$while_dismantling = {69 66 20 28 21 28 ?? 3C 31 30 29 29 20 67 6F 74 6F 20 ?? ?? 3B 20 ?? 3D ?? 2B ?? 3B}										// Contrôle de l'exécution
		$while_dismantling1 = {69 66 20 28 21 28 ?? 3E 31 30 29 29 20 67 6F 74 6F 20 ?? ?? 3B 20 ?? 2D 2D 3B 20 ?? 2B 2B 3B 20 67 6F 74 6F 20 ?? ?? 3B} 
		$With_switch1 = {20 3D 20 31 3B 20 [1 - 2] 20 3D 20 32 3B 20 [1 - 12] 20 3D 20 32 3B 20 62 72 65 61 6B 3B}  								// Switch case avec plusieurs variables
		$With_switch2 = {69 66 28 21 28 [1 - 2] 3C [1 - 12] 29 29 20 [1 - 12] 20 3D 20 36 3B 20 65 6C 73 65 20 [1 - 12] 20 3D 20 33 3B 20 62 72 65 61 6B 3B}
		$With_switch3= {20 3D 20 [1 - 2] 2B [1 - 2] 3B 20 69 66 28 21 28 [1 - 2] 3E [1 - 12] 29 29 20 [1 - 12] 20 3D 20 35 3B 20 65 6C 73 65 20 [1 - 12] 20 3D 20 34 3B 20 62 72 65 61 6B 3B}
		$With_switch4 = {2D 2D 3B 20 [1 - 12] 20 3D 20 35 3B 20}
		$With_switch5 = {2B 2B 3B 20 [1 - 12] 20 3D 20 32 3B 20 62 72 65 61 6B 3B}
	condition:
		all of ($while_dismantling*) or all of ($With_switch*)
}

rule binary{
	meta:
		Action = "Fonctions faisant intervenir le binaire afin de cacher la réel intention du programme"
	strings:
		$Define = "#define O1O printf"
		$Define1 = "#define OlO putchar"
		$Define2 = "#define O10 exit"
		$Define3 = "#define Ol0 strlen"
		$Define4 = "#define QLQ fopen"
		$Define5 = "#define OlQ fgetc"
		$Define6 = "#define O1Q abs"
		$Define7 = "#define QO0 for"
		$Exploit = "O=1,l=0,lll=O+O+O+l,OQ=056;lOL*llL='%2x ';(I != 1<<1&&(O1O(QI[0]),O10(1011-1010))),((L = QLQ(Il[O],'r'))==0&&(O1O(QI[O],Il[O]),O10(O)));lO = I-(O<<l<<O);"
		$If = "if (I == (1<<1)){	QO0(Q=Ol0(QI[O<<O<<1]);Q<Ol0(QI[0]);Q++)O1O((OL[Q]!=llO)?llL:QI[lll],OL[Q]);/*'O10(QI[1O])*/O1O(QI[lll]);{}}"
		$Else = "QO0 (Q=0L;Q<1<<1<<1<<1<<1;Q+=Q<0100){	(OL[Q]!=llO)? /* 0010 10lOQ 000LQL */((D(OL[Q])==0&&(*(OL+O1Q(Q-l))=OQ)),OlO(OL[Q])):OlO(1<<(1<<1<<1)<<1);}"
		$End_function = "O1O(QI[01^10^9]);lO+=Q+0+l;}"
	condition:
		5 of them
}

rule processor_abuse
{
	meta:
		KEY = "Fonctions abusant de l'utilisation du processeur à des fins malveillantes"
	strings:
	$val = {}
	condition:
		any of them
}










